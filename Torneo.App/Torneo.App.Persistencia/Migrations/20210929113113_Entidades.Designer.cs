// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Torneo.App.Persistencia;

namespace Torneo.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210929113113_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Torneo.App.Dominio.Arbitro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("colegioArbitro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documentoArbitro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreArbitro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefonoArbitro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Arbitros");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Desempeno", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Equipoid")
                        .HasColumnType("int");

                    b.Property<int>("golesAFavor")
                        .HasColumnType("int");

                    b.Property<int>("golesEnContra")
                        .HasColumnType("int");

                    b.Property<int>("partidosE")
                        .HasColumnType("int");

                    b.Property<int>("partidosG")
                        .HasColumnType("int");

                    b.Property<int>("partidosJ")
                        .HasColumnType("int");

                    b.Property<int>("partidosP")
                        .HasColumnType("int");

                    b.Property<int>("puntos")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Equipoid");

                    b.ToTable("Desempenos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.DirectorTecnico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("documentoDT")
                        .HasColumnType("int");

                    b.Property<string>("nombreDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefonoDT")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("DirectoresTecnicos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Equipo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DirectorTecnicoid")
                        .HasColumnType("int");

                    b.Property<int?>("Municipioid")
                        .HasColumnType("int");

                    b.Property<string>("nombreEquipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DirectorTecnicoid");

                    b.HasIndex("Municipioid");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Estadio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("direccionEstadio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("municipioid")
                        .HasColumnType("int");

                    b.Property<string>("nombreEstadio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("municipioid");

                    b.ToTable("Estadios");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Jugador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Equipoid")
                        .HasColumnType("int");

                    b.Property<string>("nombreJugador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroJugador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("posicionid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Equipoid");

                    b.HasIndex("posicionid");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Municipio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nombreMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Novedad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("jugadorid")
                        .HasColumnType("int");

                    b.Property<int>("minutoNovedad")
                        .HasColumnType("int");

                    b.Property<string>("tipoDeNovedad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("jugadorid");

                    b.ToTable("Novedades");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Partido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Arbitroid")
                        .HasColumnType("int");

                    b.Property<int?>("Desempenoid")
                        .HasColumnType("int");

                    b.Property<int?>("Novedadid")
                        .HasColumnType("int");

                    b.Property<int>("equipoLocal")
                        .HasColumnType("int");

                    b.Property<int>("equipoVisitante")
                        .HasColumnType("int");

                    b.Property<int?>("estadioid")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaPartido")
                        .HasColumnType("datetime2");

                    b.Property<string>("horaPartido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("marcadorInicialEL")
                        .HasColumnType("int");

                    b.Property<int>("marcadorInicialEV")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Arbitroid");

                    b.HasIndex("Desempenoid");

                    b.HasIndex("Novedadid");

                    b.HasIndex("estadioid");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Posicion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nombreposicion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Posiciones");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Desempeno", b =>
                {
                    b.HasOne("Torneo.App.Dominio.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("Equipoid");

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Equipo", b =>
                {
                    b.HasOne("Torneo.App.Dominio.DirectorTecnico", "DirectorTecnico")
                        .WithMany()
                        .HasForeignKey("DirectorTecnicoid");

                    b.HasOne("Torneo.App.Dominio.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("Municipioid");

                    b.Navigation("DirectorTecnico");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Estadio", b =>
                {
                    b.HasOne("Torneo.App.Dominio.Municipio", "municipio")
                        .WithMany()
                        .HasForeignKey("municipioid");

                    b.Navigation("municipio");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Jugador", b =>
                {
                    b.HasOne("Torneo.App.Dominio.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("Equipoid");

                    b.HasOne("Torneo.App.Dominio.Posicion", "posicion")
                        .WithMany()
                        .HasForeignKey("posicionid");

                    b.Navigation("Equipo");

                    b.Navigation("posicion");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Novedad", b =>
                {
                    b.HasOne("Torneo.App.Dominio.Jugador", "jugador")
                        .WithMany()
                        .HasForeignKey("jugadorid");

                    b.Navigation("jugador");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Partido", b =>
                {
                    b.HasOne("Torneo.App.Dominio.Arbitro", "Arbitro")
                        .WithMany()
                        .HasForeignKey("Arbitroid");

                    b.HasOne("Torneo.App.Dominio.Desempeno", null)
                        .WithMany("Partidos")
                        .HasForeignKey("Desempenoid");

                    b.HasOne("Torneo.App.Dominio.Novedad", "Novedad")
                        .WithMany()
                        .HasForeignKey("Novedadid");

                    b.HasOne("Torneo.App.Dominio.Estadio", "estadio")
                        .WithMany()
                        .HasForeignKey("estadioid");

                    b.Navigation("Arbitro");

                    b.Navigation("estadio");

                    b.Navigation("Novedad");
                });

            modelBuilder.Entity("Torneo.App.Dominio.Desempeno", b =>
                {
                    b.Navigation("Partidos");
                });
#pragma warning restore 612, 618
        }
    }
}
